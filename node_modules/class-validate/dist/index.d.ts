import "reflect-metadata";
import Schema, { RuleItem, Rules, ValidateOption } from "async-validator";
export declare function Validator(rule?: RuleItem): (target: any, propertyKey: string) => any;
export declare function IsNumber(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsString(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsBoolean(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsArray(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsEmail(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsDate(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsRegeExp(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsObject(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsEnum(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsAny(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsMethod(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsInteger(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsFloat(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsUrl(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsHex(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsPhoneNumber(rule?: RuleItem): (target: any, propertyKey: string) => void;
export declare function IsOptional(): (target: any, propertyKey: string) => void;
export declare const getValidateDescriptor: (classDefined: any) => Rules;
export declare const getValidator: (classDefined: any) => Schema;
export declare function validate(classDefined: any, params: any, options?: ValidateOption): Promise<void>;
export declare function Parse(type: "string" | "boolean" | "number" | "date"): (target: any, propertyKey: string) => void;
export declare const parseClassParams: (classDefined: any, params: any) => any;
