{"version":3,"sources":["../../src/driver/sap/SapConnectionOptions.ts"],"names":[],"mappings":"","file":"SapConnectionOptions.js","sourcesContent":["import { BaseDataSourceOptions } from \"../../data-source/BaseDataSourceOptions\"\nimport { SapConnectionCredentialsOptions } from \"./SapConnectionCredentialsOptions\"\n\n/**\n * SAP Hana specific connection options.\n */\nexport interface SapConnectionOptions\n    extends BaseDataSourceOptions,\n        SapConnectionCredentialsOptions {\n    /**\n     * Database type.\n     */\n    readonly type: \"sap\"\n\n    /**\n     * Database schema.\n     */\n    readonly schema?: string\n\n    /**\n     * The driver objects\n     * This defaults to require(\"@sap/hana-client\")\n     */\n    readonly driver?: any\n\n    /**\n     * @deprecated Use {@link driver} instead.\n     */\n    readonly hanaClientDriver?: any\n\n    /**\n     * Pool options.\n     */\n    readonly pool?: {\n        /**\n         * Maximum number of open connections created by the pool, each of which\n         * may be in the pool waiting to be reused or may no longer be in the\n         * pool and actively being used (default: 10).\n         */\n        readonly maxConnectedOrPooled?: number\n\n        /**\n         * Defines the maximum time, in seconds, that connections are allowed to\n         * remain in the pool before being marked for eviction (default: 30).\n         */\n        readonly maxPooledIdleTime?: number\n\n        /**\n         * Determines whether or not the pooled connection should be tested for\n         * viability before being reused (default: false).\n         */\n        readonly pingCheck?: boolean\n\n        /**\n         * Maximum number of connections allowed to be in the pool, waiting to\n         * be reused (default: 0, no limit).\n         */\n        readonly poolCapacity?: number\n\n        /**\n         * Max number of connections.\n         * @deprecated Use {@link maxConnectedOrPooled} instead.\n         */\n        readonly max?: number\n\n        /**\n         * Minimum number of connections.\n         * @deprecated Obsolete, no alternative exists.\n         */\n        readonly min?: number\n\n        /**\n         * Maximum number of waiting requests allowed.\n         * @deprecated Obsolete, no alternative exists.\n         */\n        readonly maxWaitingRequests?: number\n\n        /**\n         * Max milliseconds a request will wait for a resource before timing out.\n         * @deprecated Obsolete, no alternative exists.\n         */\n        readonly requestTimeout?: number\n\n        /**\n         * How often to run resource timeout checks.\n         * @deprecated Obsolete, no alternative exists.\n         */\n        readonly checkInterval?: number\n\n        /**\n         * Idle timeout (in milliseconds).\n         * @deprecated Use {@link maxPooledIdleTime} (in seconds) instead .\n         */\n        readonly idleTimeout?: number\n\n        /**\n         * Function handling errors thrown by drivers pool.\n         * Defaults to logging error with `warn` level.\n         */\n        readonly poolErrorHandler?: (err: any) => any\n    }\n}\n"],"sourceRoot":"../.."}